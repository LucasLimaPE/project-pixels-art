{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-12-20T14:42:10.764Z",
    "end": "2021-12-20T14:44:37.077Z",
    "duration": 146313,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "269c65e1-d6b6-46bd-9c3b-01cee08c0522",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7b79ab0a-325e-47fa-98e4-9a9ee946b9d0",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 2286,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "f6a900a3-aff9-40a7-bff4-004f93aad9c5",
              "parentUUID": "7b79ab0a-325e-47fa-98e4-9a9ee946b9d0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f6a900a3-aff9-40a7-bff4-004f93aad9c5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2286,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "daa4ac61-970a-4eef-b88b-527d06923add",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 1458,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "5e7ab61a-1afc-4b54-8602-edbd127f6068",
              "parentUUID": "daa4ac61-970a-4eef-b88b-527d06923add",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 752,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "e814e5cc-dcf5-4142-a309-08b50758cdcb",
              "parentUUID": "daa4ac61-970a-4eef-b88b-527d06923add",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 1092,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "3677c220-dc9a-4c18-923f-ae16dc9daf87",
              "parentUUID": "daa4ac61-970a-4eef-b88b-527d06923add",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 684,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "bea26037-f21f-4f1f-80f2-11ee8b19c42d",
              "parentUUID": "daa4ac61-970a-4eef-b88b-527d06923add",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 736,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "e0d5a426-9a05-4b4d-9fd0-aa955cd1b499",
              "parentUUID": "daa4ac61-970a-4eef-b88b-527d06923add",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 769,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "7b33d8bf-1ead-4c62-806a-497a16920207",
              "parentUUID": "daa4ac61-970a-4eef-b88b-527d06923add",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 694,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "18eca2ff-692b-44eb-bd34-098c9cd07767",
              "parentUUID": "daa4ac61-970a-4eef-b88b-527d06923add",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5e7ab61a-1afc-4b54-8602-edbd127f6068",
            "e814e5cc-dcf5-4142-a309-08b50758cdcb",
            "3677c220-dc9a-4c18-923f-ae16dc9daf87",
            "bea26037-f21f-4f1f-80f2-11ee8b19c42d",
            "e0d5a426-9a05-4b4d-9fd0-aa955cd1b499",
            "7b33d8bf-1ead-4c62-806a-497a16920207",
            "18eca2ff-692b-44eb-bd34-098c9cd07767"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6185,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8ec4e45f-80c0-481b-9496-db316e9b63a0",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 569,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "b6df54e9-8c0d-4004-9a29-5c4344989bdc",
              "parentUUID": "8ec4e45f-80c0-481b-9496-db316e9b63a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 1047,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "adc4a0cf-cc4a-40ea-97d2-fd0110748f40",
              "parentUUID": "8ec4e45f-80c0-481b-9496-db316e9b63a0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b6df54e9-8c0d-4004-9a29-5c4344989bdc",
            "adc4a0cf-cc4a-40ea-97d2-fd0110748f40"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1616,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a7c2d50e-4625-45dd-bdaf-7ff8cd244337",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 583,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "ef1b1356-b665-4d06-ae5b-137a642fb311",
              "parentUUID": "a7c2d50e-4625-45dd-bdaf-7ff8cd244337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 811,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "2d6b40f3-5fe6-4316-b7a1-18e72ba156e5",
              "parentUUID": "a7c2d50e-4625-45dd-bdaf-7ff8cd244337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 1027,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "e356d258-c4ed-47d1-b610-0b7d5c7f993f",
              "parentUUID": "a7c2d50e-4625-45dd-bdaf-7ff8cd244337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 631,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "ba7b01e4-24ca-4fd9-84b6-e4e02ef41590",
              "parentUUID": "a7c2d50e-4625-45dd-bdaf-7ff8cd244337",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ef1b1356-b665-4d06-ae5b-137a642fb311",
            "2d6b40f3-5fe6-4316-b7a1-18e72ba156e5",
            "e356d258-c4ed-47d1-b610-0b7d5c7f993f",
            "ba7b01e4-24ca-4fd9-84b6-e4e02ef41590"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3052,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d8cf765f-5efc-45ec-878b-c08f5493ab66",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 1415,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "c10ba57c-842e-4f63-adb8-f27020f0348f",
              "parentUUID": "d8cf765f-5efc-45ec-878b-c08f5493ab66",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 1510,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "f1cba442-a23d-46ee-8bec-8d5b20e35d3e",
              "parentUUID": "d8cf765f-5efc-45ec-878b-c08f5493ab66",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c10ba57c-842e-4f63-adb8-f27020f0348f",
            "f1cba442-a23d-46ee-8bec-8d5b20e35d3e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2925,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f2e45901-36a4-46e0-8f1f-20e498a70343",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 711,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "4399922a-2f9b-4b88-b8fd-ecc65ef3af03",
              "parentUUID": "f2e45901-36a4-46e0-8f1f-20e498a70343",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 577,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "6b36aa25-4e25-4f58-bd57-46e53ba34e30",
              "parentUUID": "f2e45901-36a4-46e0-8f1f-20e498a70343",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4399922a-2f9b-4b88-b8fd-ecc65ef3af03",
            "6b36aa25-4e25-4f58-bd57-46e53ba34e30"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1288,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ec118191-783b-482c-8bc7-241a905379cb",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 1400,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "ac539bb6-b243-442b-93f9-47fe628cd224",
              "parentUUID": "ec118191-783b-482c-8bc7-241a905379cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 13635,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "c46b6862-d30a-4a53-8778-bc34bb504d61",
              "parentUUID": "ec118191-783b-482c-8bc7-241a905379cb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ac539bb6-b243-442b-93f9-47fe628cd224",
            "c46b6862-d30a-4a53-8778-bc34bb504d61"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15035,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c85fb867-7828-4fe7-a952-8cffb8f846f4",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 3940,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "dfbd6816-5e9f-4466-bf80-938bffe5e193",
              "parentUUID": "c85fb867-7828-4fe7-a952-8cffb8f846f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 13621,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "94e7a90f-8b26-42ff-a7fc-154f26f9b586",
              "parentUUID": "c85fb867-7828-4fe7-a952-8cffb8f846f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 5101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "d7986649-481f-48b0-965f-5b2c33875000",
              "parentUUID": "c85fb867-7828-4fe7-a952-8cffb8f846f4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dfbd6816-5e9f-4466-bf80-938bffe5e193",
            "94e7a90f-8b26-42ff-a7fc-154f26f9b586",
            "d7986649-481f-48b0-965f-5b2c33875000"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 22662,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8323af95-2020-4ead-8f55-b11f44381a9a",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 857,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "4e9e2735-a55c-4a24-85b3-bdead74df6d9",
              "parentUUID": "8323af95-2020-4ead-8f55-b11f44381a9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 501,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "be304f6b-a018-461b-8dd1-cffcc702fe38",
              "parentUUID": "8323af95-2020-4ead-8f55-b11f44381a9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 1210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "1d0128d8-cc08-49e7-92a4-73426205ca65",
              "parentUUID": "8323af95-2020-4ead-8f55-b11f44381a9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 5051,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "29f44bd7-d2da-4a41-85de-3eb1a1f2989b",
              "parentUUID": "8323af95-2020-4ead-8f55-b11f44381a9a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4e9e2735-a55c-4a24-85b3-bdead74df6d9",
            "be304f6b-a018-461b-8dd1-cffcc702fe38",
            "1d0128d8-cc08-49e7-92a4-73426205ca65",
            "29f44bd7-d2da-4a41-85de-3eb1a1f2989b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7619,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f1ac0e02-d00b-48ed-97ec-f899b9a5936c",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 5522,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41603/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41603/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41603/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41603/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41603/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41603/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41603/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41603/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41603/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41603/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41603/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ef79a239-3278-4db3-ba77-bbd2026c4769",
              "parentUUID": "f1ac0e02-d00b-48ed-97ec-f899b9a5936c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 6575,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:41603/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41603/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41603/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41603/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41603/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41603/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41603/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41603/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41603/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41603/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41603/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a3c5c5c8-c154-4278-8fc7-e19653720f71",
              "parentUUID": "f1ac0e02-d00b-48ed-97ec-f899b9a5936c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 5488,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:41603/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41603/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41603/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41603/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41603/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41603/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41603/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41603/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41603/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41603/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41603/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "97d0119a-4764-41a3-b211-b66d2aba44f7",
              "parentUUID": "f1ac0e02-d00b-48ed-97ec-f899b9a5936c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 5809,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:41603/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41603/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41603/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41603/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41603/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41603/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41603/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41603/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41603/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41603/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41603/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e6cf5aaf-a9b9-437b-84fd-17b35cdff34f",
              "parentUUID": "f1ac0e02-d00b-48ed-97ec-f899b9a5936c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 5773,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41603/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41603/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41603/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41603/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41603/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41603/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41603/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41603/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41603/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41603/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41603/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e4650aa0-aec4-46bf-a4c1-9bfd5a27b83c",
              "parentUUID": "f1ac0e02-d00b-48ed-97ec-f899b9a5936c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 6262,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41603/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41603/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41603/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41603/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41603/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41603/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41603/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41603/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41603/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41603/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41603/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "37d6f1d0-8c07-4976-bae0-0a3d33fd12e1",
              "parentUUID": "f1ac0e02-d00b-48ed-97ec-f899b9a5936c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 6005,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:41603/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41603/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41603/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41603/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41603/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41603/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41603/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41603/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41603/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41603/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41603/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9703acda-1662-43a6-b2f4-9150bbd3582e",
              "parentUUID": "f1ac0e02-d00b-48ed-97ec-f899b9a5936c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 5752,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41603/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41603/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41603/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41603/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41603/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41603/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41603/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41603/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41603/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41603/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41603/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8f0d8bc0-2159-4294-b99b-5941e4fc4b63",
              "parentUUID": "f1ac0e02-d00b-48ed-97ec-f899b9a5936c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 6709,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41603/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41603/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41603/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41603/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41603/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41603/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41603/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41603/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41603/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41603/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41603/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c92e8963-c883-4bb9-af27-360c6759e0b2",
              "parentUUID": "f1ac0e02-d00b-48ed-97ec-f899b9a5936c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ef79a239-3278-4db3-ba77-bbd2026c4769",
            "a3c5c5c8-c154-4278-8fc7-e19653720f71",
            "97d0119a-4764-41a3-b211-b66d2aba44f7",
            "e6cf5aaf-a9b9-437b-84fd-17b35cdff34f",
            "e4650aa0-aec4-46bf-a4c1-9bfd5a27b83c",
            "37d6f1d0-8c07-4976-bae0-0a3d33fd12e1",
            "9703acda-1662-43a6-b2f4-9150bbd3582e",
            "8f0d8bc0-2159-4294-b99b-5941e4fc4b63",
            "c92e8963-c883-4bb9-af27-360c6759e0b2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 53895,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8acbf96f-ea48-4ba4-b989-006a26c8850b",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 6127,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41603/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41603/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41603/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41603/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41603/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41603/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41603/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41603/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41603/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41603/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41603/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7212c73c-e399-4383-b2cb-0252d6b3b9fc",
              "parentUUID": "8acbf96f-ea48-4ba4-b989-006a26c8850b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 6004,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41603/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41603/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41603/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41603/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41603/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41603/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41603/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41603/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41603/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41603/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41603/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "853ee73c-6692-4ecf-8b5f-04359b4c0126",
              "parentUUID": "8acbf96f-ea48-4ba4-b989-006a26c8850b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 5750,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41603/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41603/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41603/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41603/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41603/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41603/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41603/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41603/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41603/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41603/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41603/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "15c95306-33b3-41f0-9755-e06b874e436a",
              "parentUUID": "8acbf96f-ea48-4ba4-b989-006a26c8850b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7212c73c-e399-4383-b2cb-0252d6b3b9fc",
            "853ee73c-6692-4ecf-8b5f-04359b4c0126",
            "15c95306-33b3-41f0-9755-e06b874e436a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 17881,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "810cc9c1-271b-4179-8f38-cbae7d94a3fe",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 3884,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:41603/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:41603/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:41603/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:41603/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:41603/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:41603/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:41603/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:41603/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41603/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41603/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:41603/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41603/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "b1db8c08-7655-4bf3-8b5e-432ae5ac5438",
              "parentUUID": "810cc9c1-271b-4179-8f38-cbae7d94a3fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 3367,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:41603/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:41603/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:41603/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:41603/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:41603/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:41603/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:41603/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:41603/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41603/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41603/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:41603/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41603/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41603/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "4c0a4ba1-271c-40c5-95f9-2e966e249ce4",
              "parentUUID": "810cc9c1-271b-4179-8f38-cbae7d94a3fe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b1db8c08-7655-4bf3-8b5e-432ae5ac5438",
            "4c0a4ba1-271c-40c5-95f9-2e966e249ce4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 7251,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}