{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2022-01-19T20:05:11.764Z",
    "end": "2022-01-19T20:07:19.997Z",
    "duration": 128233,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "68936928-0f0e-49eb-a732-283977591ff0",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e57a1acc-ce0a-4d3b-af7c-aca9ccd65116",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 1192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "6427da21-4379-42f9-9956-0b0d1c3587ca",
              "parentUUID": "e57a1acc-ce0a-4d3b-af7c-aca9ccd65116",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6427da21-4379-42f9-9956-0b0d1c3587ca"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1192,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "82170e7b-d149-48f8-ab7d-699e3a9f8957",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 739,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "8d313c29-b6c8-4f0c-a870-4a2c6fa36ab5",
              "parentUUID": "82170e7b-d149-48f8-ab7d-699e3a9f8957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 1027,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "79119025-dede-4b68-825a-40b624b1a379",
              "parentUUID": "82170e7b-d149-48f8-ab7d-699e3a9f8957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 1062,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "2979a079-7238-494f-a1a9-f08f7ecf59bf",
              "parentUUID": "82170e7b-d149-48f8-ab7d-699e3a9f8957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 555,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "b383680a-d8b2-483b-a1c0-4e6135ed32d4",
              "parentUUID": "82170e7b-d149-48f8-ab7d-699e3a9f8957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 515,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "6954f645-e0ec-418d-8dc7-31b1ad4ae28d",
              "parentUUID": "82170e7b-d149-48f8-ab7d-699e3a9f8957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 545,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "dd0421f1-913d-4ac9-be1d-b614fad2fb0e",
              "parentUUID": "82170e7b-d149-48f8-ab7d-699e3a9f8957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 531,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "50598b38-d42b-4e9a-9611-0dfd33a7e411",
              "parentUUID": "82170e7b-d149-48f8-ab7d-699e3a9f8957",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8d313c29-b6c8-4f0c-a870-4a2c6fa36ab5",
            "79119025-dede-4b68-825a-40b624b1a379",
            "2979a079-7238-494f-a1a9-f08f7ecf59bf",
            "b383680a-d8b2-483b-a1c0-4e6135ed32d4",
            "6954f645-e0ec-418d-8dc7-31b1ad4ae28d",
            "dd0421f1-913d-4ac9-be1d-b614fad2fb0e",
            "50598b38-d42b-4e9a-9611-0dfd33a7e411"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4974,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eb9a4e83-7b6e-4767-8913-5a856e98b0ab",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 441,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "89681ea8-3758-4c85-9e72-df5ec6a38b31",
              "parentUUID": "eb9a4e83-7b6e-4767-8913-5a856e98b0ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 973,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "620c4b04-c66f-42ad-afc9-de985b014e21",
              "parentUUID": "eb9a4e83-7b6e-4767-8913-5a856e98b0ab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "89681ea8-3758-4c85-9e72-df5ec6a38b31",
            "620c4b04-c66f-42ad-afc9-de985b014e21"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1414,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "84d6616f-eb8c-4bd6-a3c6-e0bbba01ccb5",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 473,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "027b51d7-dfba-40c0-8376-9439191a3113",
              "parentUUID": "84d6616f-eb8c-4bd6-a3c6-e0bbba01ccb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 727,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "8cc38563-8b1f-4e88-a7cc-771d15aa53c9",
              "parentUUID": "84d6616f-eb8c-4bd6-a3c6-e0bbba01ccb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 741,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "cbdf09a8-8582-4116-a8fd-036586f3b330",
              "parentUUID": "84d6616f-eb8c-4bd6-a3c6-e0bbba01ccb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 564,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "9509fdab-e0e5-4b99-bc8c-76661a7f823f",
              "parentUUID": "84d6616f-eb8c-4bd6-a3c6-e0bbba01ccb5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "027b51d7-dfba-40c0-8376-9439191a3113",
            "8cc38563-8b1f-4e88-a7cc-771d15aa53c9",
            "cbdf09a8-8582-4116-a8fd-036586f3b330",
            "9509fdab-e0e5-4b99-bc8c-76661a7f823f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2505,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0fc4ca3b-531e-4ee3-93b8-89ee59075344",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 1262,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "bcb5b955-d521-46bc-b2c5-5921c2a42641",
              "parentUUID": "0fc4ca3b-531e-4ee3-93b8-89ee59075344",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 1379,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "566f2ed9-1b6b-4820-952a-81cceef7de80",
              "parentUUID": "0fc4ca3b-531e-4ee3-93b8-89ee59075344",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bcb5b955-d521-46bc-b2c5-5921c2a42641",
            "566f2ed9-1b6b-4820-952a-81cceef7de80"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2641,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "45cd8f3a-239b-49a2-a48a-d3ac8b59a1bb",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 368,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "14ad4d4a-7e27-40d0-8c13-effa68d3a043",
              "parentUUID": "45cd8f3a-239b-49a2-a48a-d3ac8b59a1bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 436,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "c70de22c-93c1-4e35-8f39-e527022012a8",
              "parentUUID": "45cd8f3a-239b-49a2-a48a-d3ac8b59a1bb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "14ad4d4a-7e27-40d0-8c13-effa68d3a043",
            "c70de22c-93c1-4e35-8f39-e527022012a8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 804,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "231c097e-61e0-4a1c-8495-9b8f56ab1f19",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 1240,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "82f8a113-9f65-49ec-b59e-d3f48ca67abf",
              "parentUUID": "231c097e-61e0-4a1c-8495-9b8f56ab1f19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 13113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "0e12dc39-569b-4bbc-ad01-3642f06ff9b6",
              "parentUUID": "231c097e-61e0-4a1c-8495-9b8f56ab1f19",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "82f8a113-9f65-49ec-b59e-d3f48ca67abf",
            "0e12dc39-569b-4bbc-ad01-3642f06ff9b6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14353,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "230d2c31-a43a-4934-b015-6a6dccc4d572",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 3585,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "628c99d3-d889-452a-8548-26181efd050a",
              "parentUUID": "230d2c31-a43a-4934-b015-6a6dccc4d572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 12195,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "619c9ab5-ae26-4881-ac2a-bec6a3ee2c7b",
              "parentUUID": "230d2c31-a43a-4934-b015-6a6dccc4d572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 4195,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "bb4ce34c-46d5-4aef-b6ce-d7731aea4dc3",
              "parentUUID": "230d2c31-a43a-4934-b015-6a6dccc4d572",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "628c99d3-d889-452a-8548-26181efd050a",
            "619c9ab5-ae26-4881-ac2a-bec6a3ee2c7b",
            "bb4ce34c-46d5-4aef-b6ce-d7731aea4dc3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19975,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7dfa8fae-b34a-4180-b840-e11013bfcbaa",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 675,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "60e9f603-d283-4c91-a399-3c5a8516b375",
              "parentUUID": "7dfa8fae-b34a-4180-b840-e11013bfcbaa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 506,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "5a4e8ab0-2e25-44f6-9fab-1a2d5dc2a405",
              "parentUUID": "7dfa8fae-b34a-4180-b840-e11013bfcbaa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 424,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "58d0dd81-ccc0-4450-adf0-921ee853cbaf",
              "parentUUID": "7dfa8fae-b34a-4180-b840-e11013bfcbaa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 3464,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "29ae0c4b-1c0e-4b84-ba40-cf3d5f556187",
              "parentUUID": "7dfa8fae-b34a-4180-b840-e11013bfcbaa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "60e9f603-d283-4c91-a399-3c5a8516b375",
            "5a4e8ab0-2e25-44f6-9fab-1a2d5dc2a405",
            "58d0dd81-ccc0-4450-adf0-921ee853cbaf",
            "29ae0c4b-1c0e-4b84-ba40-cf3d5f556187"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5069,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a08480e3-431c-467e-a26b-a168fee6cc0c",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 5272,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33297/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33297/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33297/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33297/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33297/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33297/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33297/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33297/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33297/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33297/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33297/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2f7e4e63-f597-4796-9d00-be8ac9be3226",
              "parentUUID": "a08480e3-431c-467e-a26b-a168fee6cc0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 5992,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33297/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33297/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33297/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33297/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33297/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33297/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33297/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33297/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33297/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33297/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33297/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "edc2cd72-707e-4723-becf-b543ea9219d4",
              "parentUUID": "a08480e3-431c-467e-a26b-a168fee6cc0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 5750,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:33297/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33297/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33297/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33297/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33297/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33297/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33297/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33297/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33297/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33297/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33297/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7a2f7602-4cf2-4bdd-bef7-caac50c11539",
              "parentUUID": "a08480e3-431c-467e-a26b-a168fee6cc0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 5376,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33297/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33297/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33297/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33297/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33297/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33297/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33297/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33297/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33297/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33297/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33297/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f46ba918-1374-4f6f-949d-f584d3b98674",
              "parentUUID": "a08480e3-431c-467e-a26b-a168fee6cc0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 5645,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33297/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33297/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33297/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33297/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33297/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33297/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33297/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33297/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33297/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33297/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33297/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1a7e396f-4446-4b72-af9a-d752768c18ca",
              "parentUUID": "a08480e3-431c-467e-a26b-a168fee6cc0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 5273,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33297/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33297/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33297/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33297/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33297/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33297/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33297/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33297/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33297/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33297/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33297/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4987bcb7-a8d3-4ac8-b8d8-5c997a60dde3",
              "parentUUID": "a08480e3-431c-467e-a26b-a168fee6cc0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 5526,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33297/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33297/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33297/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33297/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33297/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33297/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33297/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33297/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33297/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33297/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33297/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b4665434-9068-44de-a2bc-75f3e9b9c9b0",
              "parentUUID": "a08480e3-431c-467e-a26b-a168fee6cc0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 5604,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33297/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33297/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33297/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33297/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33297/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33297/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33297/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33297/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33297/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33297/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33297/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d1a6d1cc-01bd-40b1-821d-ca91ec5eb801",
              "parentUUID": "a08480e3-431c-467e-a26b-a168fee6cc0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 5736,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33297/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33297/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33297/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33297/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33297/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33297/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33297/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33297/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33297/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33297/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33297/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "24f11c79-5f8e-4f11-9b85-b3b70ef71fff",
              "parentUUID": "a08480e3-431c-467e-a26b-a168fee6cc0c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "2f7e4e63-f597-4796-9d00-be8ac9be3226",
            "edc2cd72-707e-4723-becf-b543ea9219d4",
            "7a2f7602-4cf2-4bdd-bef7-caac50c11539",
            "f46ba918-1374-4f6f-949d-f584d3b98674",
            "1a7e396f-4446-4b72-af9a-d752768c18ca",
            "4987bcb7-a8d3-4ac8-b8d8-5c997a60dde3",
            "b4665434-9068-44de-a2bc-75f3e9b9c9b0",
            "d1a6d1cc-01bd-40b1-821d-ca91ec5eb801",
            "24f11c79-5f8e-4f11-9b85-b3b70ef71fff"
          ],
          "pending": [],
          "skipped": [],
          "duration": 50174,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7c2d7734-f62e-4047-8b30-5062dd25cde1",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 5464,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33297/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33297/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33297/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33297/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33297/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33297/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33297/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33297/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33297/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33297/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33297/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4cd1f82a-e809-4e0b-bef7-cf93a36e8e4d",
              "parentUUID": "7c2d7734-f62e-4047-8b30-5062dd25cde1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 5886,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33297/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33297/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33297/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33297/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33297/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33297/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33297/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33297/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33297/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33297/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33297/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d9ee2bac-cf34-4a3c-a523-0c83261bf74d",
              "parentUUID": "7c2d7734-f62e-4047-8b30-5062dd25cde1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 5096,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33297/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33297/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33297/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33297/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33297/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33297/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33297/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33297/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33297/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33297/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33297/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0a96891a-3b7b-4cbe-a8fa-448e9f72ac2f",
              "parentUUID": "7c2d7734-f62e-4047-8b30-5062dd25cde1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "4cd1f82a-e809-4e0b-bef7-cf93a36e8e4d",
            "d9ee2bac-cf34-4a3c-a523-0c83261bf74d",
            "0a96891a-3b7b-4cbe-a8fa-448e9f72ac2f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 16446,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1b1b585d-e92d-4be2-ad5d-252e458c0e2f",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 2717,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:33297/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33297/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33297/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33297/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33297/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33297/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33297/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33297/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33297/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33297/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33297/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33297/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "8d09a4b2-19cb-4c6b-8f11-a591abec7e45",
              "parentUUID": "1b1b585d-e92d-4be2-ad5d-252e458c0e2f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 1758,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:33297/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33297/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33297/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33297/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33297/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33297/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33297/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33297/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33297/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33297/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33297/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33297/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33297/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "de9e21df-3a6c-4727-be20-02f55bb4fe42",
              "parentUUID": "1b1b585d-e92d-4be2-ad5d-252e458c0e2f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8d09a4b2-19cb-4c6b-8f11-a591abec7e45",
            "de9e21df-3a6c-4727-be20-02f55bb4fe42"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4475,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}